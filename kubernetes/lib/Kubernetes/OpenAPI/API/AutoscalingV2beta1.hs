{-
   Kubernetes

   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI Version: 3.0.1
   Kubernetes API version: release-1.16
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Kubernetes.OpenAPI.API.AutoscalingV2beta1
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Kubernetes.OpenAPI.API.AutoscalingV2beta1 where

import Kubernetes.OpenAPI.Core
import Kubernetes.OpenAPI.MimeTypes
import Kubernetes.OpenAPI.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** AutoscalingV2beta1

-- *** createNamespacedHorizontalPodAutoscaler

-- | @POST \/apis\/autoscaling\/v2beta1\/namespaces\/{namespace}\/horizontalpodautoscalers@
-- 
-- create a HorizontalPodAutoscaler
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
createNamespacedHorizontalPodAutoscaler 
  :: (Consumes CreateNamespacedHorizontalPodAutoscaler contentType, MimeRender contentType V2beta1HorizontalPodAutoscaler)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> V2beta1HorizontalPodAutoscaler -- ^ "body"
  -> Namespace -- ^ "namespace" -  object name and auth scope, such as for teams and projects
  -> KubernetesRequest CreateNamespacedHorizontalPodAutoscaler contentType V2beta1HorizontalPodAutoscaler accept
createNamespacedHorizontalPodAutoscaler _  _ body (Namespace namespace) =
  _mkRequest "POST" ["/apis/autoscaling/v2beta1/namespaces/",toPath namespace,"/horizontalpodautoscalers"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data CreateNamespacedHorizontalPodAutoscaler 
instance HasBodyParam CreateNamespacedHorizontalPodAutoscaler V2beta1HorizontalPodAutoscaler 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam CreateNamespacedHorizontalPodAutoscaler Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam CreateNamespacedHorizontalPodAutoscaler DryRun where
  applyOptionalParam req (DryRun xs) =
    req `setQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldManager" - fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
instance HasOptionalParam CreateNamespacedHorizontalPodAutoscaler FieldManager where
  applyOptionalParam req (FieldManager xs) =
    req `setQuery` toQuery ("fieldManager", Just xs)
    
-- | @*/*@
instance MimeType mtype => Consumes CreateNamespacedHorizontalPodAutoscaler mtype

-- | @application/json@
instance Produces CreateNamespacedHorizontalPodAutoscaler MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces CreateNamespacedHorizontalPodAutoscaler MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces CreateNamespacedHorizontalPodAutoscaler MimeYaml


-- *** deleteCollectionNamespacedHorizontalPodAutoscaler

-- | @DELETE \/apis\/autoscaling\/v2beta1\/namespaces\/{namespace}\/horizontalpodautoscalers@
-- 
-- delete collection of HorizontalPodAutoscaler
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
deleteCollectionNamespacedHorizontalPodAutoscaler 
  :: (Consumes DeleteCollectionNamespacedHorizontalPodAutoscaler contentType)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Namespace -- ^ "namespace" -  object name and auth scope, such as for teams and projects
  -> KubernetesRequest DeleteCollectionNamespacedHorizontalPodAutoscaler contentType V1Status accept
deleteCollectionNamespacedHorizontalPodAutoscaler _  _ (Namespace namespace) =
  _mkRequest "DELETE" ["/apis/autoscaling/v2beta1/namespaces/",toPath namespace,"/horizontalpodautoscalers"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data DeleteCollectionNamespacedHorizontalPodAutoscaler 
instance HasBodyParam DeleteCollectionNamespacedHorizontalPodAutoscaler V1DeleteOptions 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam DeleteCollectionNamespacedHorizontalPodAutoscaler Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "continue" - The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
instance HasOptionalParam DeleteCollectionNamespacedHorizontalPodAutoscaler Continue where
  applyOptionalParam req (Continue xs) =
    req `setQuery` toQuery ("continue", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam DeleteCollectionNamespacedHorizontalPodAutoscaler DryRun where
  applyOptionalParam req (DryRun xs) =
    req `setQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldSelector" - A selector to restrict the list of returned objects by their fields. Defaults to everything.
instance HasOptionalParam DeleteCollectionNamespacedHorizontalPodAutoscaler FieldSelector where
  applyOptionalParam req (FieldSelector xs) =
    req `setQuery` toQuery ("fieldSelector", Just xs)

-- | /Optional Param/ "gracePeriodSeconds" - The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
instance HasOptionalParam DeleteCollectionNamespacedHorizontalPodAutoscaler GracePeriodSeconds where
  applyOptionalParam req (GracePeriodSeconds xs) =
    req `setQuery` toQuery ("gracePeriodSeconds", Just xs)

-- | /Optional Param/ "labelSelector" - A selector to restrict the list of returned objects by their labels. Defaults to everything.
instance HasOptionalParam DeleteCollectionNamespacedHorizontalPodAutoscaler LabelSelector where
  applyOptionalParam req (LabelSelector xs) =
    req `setQuery` toQuery ("labelSelector", Just xs)

-- | /Optional Param/ "limit" - limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
instance HasOptionalParam DeleteCollectionNamespacedHorizontalPodAutoscaler Limit where
  applyOptionalParam req (Limit xs) =
    req `setQuery` toQuery ("limit", Just xs)

-- | /Optional Param/ "orphanDependents" - Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
instance HasOptionalParam DeleteCollectionNamespacedHorizontalPodAutoscaler OrphanDependents where
  applyOptionalParam req (OrphanDependents xs) =
    req `setQuery` toQuery ("orphanDependents", Just xs)

-- | /Optional Param/ "propagationPolicy" - Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
instance HasOptionalParam DeleteCollectionNamespacedHorizontalPodAutoscaler PropagationPolicy where
  applyOptionalParam req (PropagationPolicy xs) =
    req `setQuery` toQuery ("propagationPolicy", Just xs)

-- | /Optional Param/ "resourceVersion" - When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
instance HasOptionalParam DeleteCollectionNamespacedHorizontalPodAutoscaler ResourceVersion where
  applyOptionalParam req (ResourceVersion xs) =
    req `setQuery` toQuery ("resourceVersion", Just xs)

-- | /Optional Param/ "timeoutSeconds" - Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
instance HasOptionalParam DeleteCollectionNamespacedHorizontalPodAutoscaler TimeoutSeconds where
  applyOptionalParam req (TimeoutSeconds xs) =
    req `setQuery` toQuery ("timeoutSeconds", Just xs)
    
-- | @*/*@
instance MimeType mtype => Consumes DeleteCollectionNamespacedHorizontalPodAutoscaler mtype

-- | @application/json@
instance Produces DeleteCollectionNamespacedHorizontalPodAutoscaler MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces DeleteCollectionNamespacedHorizontalPodAutoscaler MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces DeleteCollectionNamespacedHorizontalPodAutoscaler MimeYaml


-- *** deleteNamespacedHorizontalPodAutoscaler

-- | @DELETE \/apis\/autoscaling\/v2beta1\/namespaces\/{namespace}\/horizontalpodautoscalers\/{name}@
-- 
-- delete a HorizontalPodAutoscaler
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
deleteNamespacedHorizontalPodAutoscaler 
  :: (Consumes DeleteNamespacedHorizontalPodAutoscaler contentType)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Name -- ^ "name" -  name of the HorizontalPodAutoscaler
  -> Namespace -- ^ "namespace" -  object name and auth scope, such as for teams and projects
  -> KubernetesRequest DeleteNamespacedHorizontalPodAutoscaler contentType V1Status accept
deleteNamespacedHorizontalPodAutoscaler _  _ (Name name) (Namespace namespace) =
  _mkRequest "DELETE" ["/apis/autoscaling/v2beta1/namespaces/",toPath namespace,"/horizontalpodautoscalers/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data DeleteNamespacedHorizontalPodAutoscaler 
instance HasBodyParam DeleteNamespacedHorizontalPodAutoscaler V1DeleteOptions 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam DeleteNamespacedHorizontalPodAutoscaler Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam DeleteNamespacedHorizontalPodAutoscaler DryRun where
  applyOptionalParam req (DryRun xs) =
    req `setQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "gracePeriodSeconds" - The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
instance HasOptionalParam DeleteNamespacedHorizontalPodAutoscaler GracePeriodSeconds where
  applyOptionalParam req (GracePeriodSeconds xs) =
    req `setQuery` toQuery ("gracePeriodSeconds", Just xs)

-- | /Optional Param/ "orphanDependents" - Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
instance HasOptionalParam DeleteNamespacedHorizontalPodAutoscaler OrphanDependents where
  applyOptionalParam req (OrphanDependents xs) =
    req `setQuery` toQuery ("orphanDependents", Just xs)

-- | /Optional Param/ "propagationPolicy" - Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
instance HasOptionalParam DeleteNamespacedHorizontalPodAutoscaler PropagationPolicy where
  applyOptionalParam req (PropagationPolicy xs) =
    req `setQuery` toQuery ("propagationPolicy", Just xs)
    
-- | @*/*@
instance MimeType mtype => Consumes DeleteNamespacedHorizontalPodAutoscaler mtype

-- | @application/json@
instance Produces DeleteNamespacedHorizontalPodAutoscaler MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces DeleteNamespacedHorizontalPodAutoscaler MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces DeleteNamespacedHorizontalPodAutoscaler MimeYaml


-- *** getAPIResources

-- | @GET \/apis\/autoscaling\/v2beta1\/@
-- 
-- get available resources
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
getAPIResources 
  :: Accept accept -- ^ request accept ('MimeType')
  -> KubernetesRequest GetAPIResources MimeNoContent V1APIResourceList accept
getAPIResources  _ =
  _mkRequest "GET" ["/apis/autoscaling/v2beta1/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data GetAPIResources  
-- | @application/json@
instance Produces GetAPIResources MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces GetAPIResources MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces GetAPIResources MimeYaml


-- *** listHorizontalPodAutoscalerForAllNamespaces

-- | @GET \/apis\/autoscaling\/v2beta1\/horizontalpodautoscalers@
-- 
-- list or watch objects of kind HorizontalPodAutoscaler
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
listHorizontalPodAutoscalerForAllNamespaces 
  :: Accept accept -- ^ request accept ('MimeType')
  -> KubernetesRequest ListHorizontalPodAutoscalerForAllNamespaces MimeNoContent V2beta1HorizontalPodAutoscalerList accept
listHorizontalPodAutoscalerForAllNamespaces  _ =
  _mkRequest "GET" ["/apis/autoscaling/v2beta1/horizontalpodautoscalers"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data ListHorizontalPodAutoscalerForAllNamespaces  

-- | /Optional Param/ "allowWatchBookmarks" - allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.  This field is beta.
instance HasOptionalParam ListHorizontalPodAutoscalerForAllNamespaces AllowWatchBookmarks where
  applyOptionalParam req (AllowWatchBookmarks xs) =
    req `setQuery` toQuery ("allowWatchBookmarks", Just xs)

-- | /Optional Param/ "continue" - The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
instance HasOptionalParam ListHorizontalPodAutoscalerForAllNamespaces Continue where
  applyOptionalParam req (Continue xs) =
    req `setQuery` toQuery ("continue", Just xs)

-- | /Optional Param/ "fieldSelector" - A selector to restrict the list of returned objects by their fields. Defaults to everything.
instance HasOptionalParam ListHorizontalPodAutoscalerForAllNamespaces FieldSelector where
  applyOptionalParam req (FieldSelector xs) =
    req `setQuery` toQuery ("fieldSelector", Just xs)

-- | /Optional Param/ "labelSelector" - A selector to restrict the list of returned objects by their labels. Defaults to everything.
instance HasOptionalParam ListHorizontalPodAutoscalerForAllNamespaces LabelSelector where
  applyOptionalParam req (LabelSelector xs) =
    req `setQuery` toQuery ("labelSelector", Just xs)

-- | /Optional Param/ "limit" - limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
instance HasOptionalParam ListHorizontalPodAutoscalerForAllNamespaces Limit where
  applyOptionalParam req (Limit xs) =
    req `setQuery` toQuery ("limit", Just xs)

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam ListHorizontalPodAutoscalerForAllNamespaces Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "resourceVersion" - When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
instance HasOptionalParam ListHorizontalPodAutoscalerForAllNamespaces ResourceVersion where
  applyOptionalParam req (ResourceVersion xs) =
    req `setQuery` toQuery ("resourceVersion", Just xs)

-- | /Optional Param/ "timeoutSeconds" - Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
instance HasOptionalParam ListHorizontalPodAutoscalerForAllNamespaces TimeoutSeconds where
  applyOptionalParam req (TimeoutSeconds xs) =
    req `setQuery` toQuery ("timeoutSeconds", Just xs)

-- | /Optional Param/ "watch" - Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
instance HasOptionalParam ListHorizontalPodAutoscalerForAllNamespaces Watch where
  applyOptionalParam req (Watch xs) =
    req `setQuery` toQuery ("watch", Just xs)
-- | @application/json@
instance Produces ListHorizontalPodAutoscalerForAllNamespaces MimeJSON
-- | @application/json;stream=watch@
instance Produces ListHorizontalPodAutoscalerForAllNamespaces MimeJsonstreamwatch
-- | @application/vnd.kubernetes.protobuf@
instance Produces ListHorizontalPodAutoscalerForAllNamespaces MimeVndKubernetesProtobuf
-- | @application/vnd.kubernetes.protobuf;stream=watch@
instance Produces ListHorizontalPodAutoscalerForAllNamespaces MimeVndKubernetesProtobufstreamwatch
-- | @application/yaml@
instance Produces ListHorizontalPodAutoscalerForAllNamespaces MimeYaml


-- *** listNamespacedHorizontalPodAutoscaler

-- | @GET \/apis\/autoscaling\/v2beta1\/namespaces\/{namespace}\/horizontalpodautoscalers@
-- 
-- list or watch objects of kind HorizontalPodAutoscaler
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
listNamespacedHorizontalPodAutoscaler 
  :: Accept accept -- ^ request accept ('MimeType')
  -> Namespace -- ^ "namespace" -  object name and auth scope, such as for teams and projects
  -> KubernetesRequest ListNamespacedHorizontalPodAutoscaler MimeNoContent V2beta1HorizontalPodAutoscalerList accept
listNamespacedHorizontalPodAutoscaler  _ (Namespace namespace) =
  _mkRequest "GET" ["/apis/autoscaling/v2beta1/namespaces/",toPath namespace,"/horizontalpodautoscalers"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data ListNamespacedHorizontalPodAutoscaler  

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam ListNamespacedHorizontalPodAutoscaler Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "allowWatchBookmarks" - allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.  This field is beta.
instance HasOptionalParam ListNamespacedHorizontalPodAutoscaler AllowWatchBookmarks where
  applyOptionalParam req (AllowWatchBookmarks xs) =
    req `setQuery` toQuery ("allowWatchBookmarks", Just xs)

-- | /Optional Param/ "continue" - The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
instance HasOptionalParam ListNamespacedHorizontalPodAutoscaler Continue where
  applyOptionalParam req (Continue xs) =
    req `setQuery` toQuery ("continue", Just xs)

-- | /Optional Param/ "fieldSelector" - A selector to restrict the list of returned objects by their fields. Defaults to everything.
instance HasOptionalParam ListNamespacedHorizontalPodAutoscaler FieldSelector where
  applyOptionalParam req (FieldSelector xs) =
    req `setQuery` toQuery ("fieldSelector", Just xs)

-- | /Optional Param/ "labelSelector" - A selector to restrict the list of returned objects by their labels. Defaults to everything.
instance HasOptionalParam ListNamespacedHorizontalPodAutoscaler LabelSelector where
  applyOptionalParam req (LabelSelector xs) =
    req `setQuery` toQuery ("labelSelector", Just xs)

-- | /Optional Param/ "limit" - limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
instance HasOptionalParam ListNamespacedHorizontalPodAutoscaler Limit where
  applyOptionalParam req (Limit xs) =
    req `setQuery` toQuery ("limit", Just xs)

-- | /Optional Param/ "resourceVersion" - When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
instance HasOptionalParam ListNamespacedHorizontalPodAutoscaler ResourceVersion where
  applyOptionalParam req (ResourceVersion xs) =
    req `setQuery` toQuery ("resourceVersion", Just xs)

-- | /Optional Param/ "timeoutSeconds" - Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
instance HasOptionalParam ListNamespacedHorizontalPodAutoscaler TimeoutSeconds where
  applyOptionalParam req (TimeoutSeconds xs) =
    req `setQuery` toQuery ("timeoutSeconds", Just xs)

-- | /Optional Param/ "watch" - Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
instance HasOptionalParam ListNamespacedHorizontalPodAutoscaler Watch where
  applyOptionalParam req (Watch xs) =
    req `setQuery` toQuery ("watch", Just xs)
-- | @application/json@
instance Produces ListNamespacedHorizontalPodAutoscaler MimeJSON
-- | @application/json;stream=watch@
instance Produces ListNamespacedHorizontalPodAutoscaler MimeJsonstreamwatch
-- | @application/vnd.kubernetes.protobuf@
instance Produces ListNamespacedHorizontalPodAutoscaler MimeVndKubernetesProtobuf
-- | @application/vnd.kubernetes.protobuf;stream=watch@
instance Produces ListNamespacedHorizontalPodAutoscaler MimeVndKubernetesProtobufstreamwatch
-- | @application/yaml@
instance Produces ListNamespacedHorizontalPodAutoscaler MimeYaml


-- *** patchNamespacedHorizontalPodAutoscaler

-- | @PATCH \/apis\/autoscaling\/v2beta1\/namespaces\/{namespace}\/horizontalpodautoscalers\/{name}@
-- 
-- partially update the specified HorizontalPodAutoscaler
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
patchNamespacedHorizontalPodAutoscaler 
  :: (Consumes PatchNamespacedHorizontalPodAutoscaler contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Body -- ^ "body"
  -> Name -- ^ "name" -  name of the HorizontalPodAutoscaler
  -> Namespace -- ^ "namespace" -  object name and auth scope, such as for teams and projects
  -> KubernetesRequest PatchNamespacedHorizontalPodAutoscaler contentType V2beta1HorizontalPodAutoscaler accept
patchNamespacedHorizontalPodAutoscaler _  _ body (Name name) (Namespace namespace) =
  _mkRequest "PATCH" ["/apis/autoscaling/v2beta1/namespaces/",toPath namespace,"/horizontalpodautoscalers/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data PatchNamespacedHorizontalPodAutoscaler 
instance HasBodyParam PatchNamespacedHorizontalPodAutoscaler Body 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam PatchNamespacedHorizontalPodAutoscaler Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam PatchNamespacedHorizontalPodAutoscaler DryRun where
  applyOptionalParam req (DryRun xs) =
    req `setQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldManager" - fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
instance HasOptionalParam PatchNamespacedHorizontalPodAutoscaler FieldManager where
  applyOptionalParam req (FieldManager xs) =
    req `setQuery` toQuery ("fieldManager", Just xs)

-- | /Optional Param/ "force" - Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
instance HasOptionalParam PatchNamespacedHorizontalPodAutoscaler Force where
  applyOptionalParam req (Force xs) =
    req `setQuery` toQuery ("force", Just xs)

-- | @application/apply-patch+yaml@
instance Consumes PatchNamespacedHorizontalPodAutoscaler MimeApplyPatchyaml
-- | @application/json-patch+json@
instance Consumes PatchNamespacedHorizontalPodAutoscaler MimeJsonPatchjson
-- | @application/merge-patch+json@
instance Consumes PatchNamespacedHorizontalPodAutoscaler MimeMergePatchjson
-- | @application/strategic-merge-patch+json@
instance Consumes PatchNamespacedHorizontalPodAutoscaler MimeStrategicMergePatchjson

-- | @application/json@
instance Produces PatchNamespacedHorizontalPodAutoscaler MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces PatchNamespacedHorizontalPodAutoscaler MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces PatchNamespacedHorizontalPodAutoscaler MimeYaml


-- *** patchNamespacedHorizontalPodAutoscalerStatus

-- | @PATCH \/apis\/autoscaling\/v2beta1\/namespaces\/{namespace}\/horizontalpodautoscalers\/{name}\/status@
-- 
-- partially update status of the specified HorizontalPodAutoscaler
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
patchNamespacedHorizontalPodAutoscalerStatus 
  :: (Consumes PatchNamespacedHorizontalPodAutoscalerStatus contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Body -- ^ "body"
  -> Name -- ^ "name" -  name of the HorizontalPodAutoscaler
  -> Namespace -- ^ "namespace" -  object name and auth scope, such as for teams and projects
  -> KubernetesRequest PatchNamespacedHorizontalPodAutoscalerStatus contentType V2beta1HorizontalPodAutoscaler accept
patchNamespacedHorizontalPodAutoscalerStatus _  _ body (Name name) (Namespace namespace) =
  _mkRequest "PATCH" ["/apis/autoscaling/v2beta1/namespaces/",toPath namespace,"/horizontalpodautoscalers/",toPath name,"/status"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data PatchNamespacedHorizontalPodAutoscalerStatus 
instance HasBodyParam PatchNamespacedHorizontalPodAutoscalerStatus Body 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam PatchNamespacedHorizontalPodAutoscalerStatus Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam PatchNamespacedHorizontalPodAutoscalerStatus DryRun where
  applyOptionalParam req (DryRun xs) =
    req `setQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldManager" - fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
instance HasOptionalParam PatchNamespacedHorizontalPodAutoscalerStatus FieldManager where
  applyOptionalParam req (FieldManager xs) =
    req `setQuery` toQuery ("fieldManager", Just xs)

-- | /Optional Param/ "force" - Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
instance HasOptionalParam PatchNamespacedHorizontalPodAutoscalerStatus Force where
  applyOptionalParam req (Force xs) =
    req `setQuery` toQuery ("force", Just xs)

-- | @application/apply-patch+yaml@
instance Consumes PatchNamespacedHorizontalPodAutoscalerStatus MimeApplyPatchyaml
-- | @application/json-patch+json@
instance Consumes PatchNamespacedHorizontalPodAutoscalerStatus MimeJsonPatchjson
-- | @application/merge-patch+json@
instance Consumes PatchNamespacedHorizontalPodAutoscalerStatus MimeMergePatchjson
-- | @application/strategic-merge-patch+json@
instance Consumes PatchNamespacedHorizontalPodAutoscalerStatus MimeStrategicMergePatchjson

-- | @application/json@
instance Produces PatchNamespacedHorizontalPodAutoscalerStatus MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces PatchNamespacedHorizontalPodAutoscalerStatus MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces PatchNamespacedHorizontalPodAutoscalerStatus MimeYaml


-- *** readNamespacedHorizontalPodAutoscaler

-- | @GET \/apis\/autoscaling\/v2beta1\/namespaces\/{namespace}\/horizontalpodautoscalers\/{name}@
-- 
-- read the specified HorizontalPodAutoscaler
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
readNamespacedHorizontalPodAutoscaler 
  :: Accept accept -- ^ request accept ('MimeType')
  -> Name -- ^ "name" -  name of the HorizontalPodAutoscaler
  -> Namespace -- ^ "namespace" -  object name and auth scope, such as for teams and projects
  -> KubernetesRequest ReadNamespacedHorizontalPodAutoscaler MimeNoContent V2beta1HorizontalPodAutoscaler accept
readNamespacedHorizontalPodAutoscaler  _ (Name name) (Namespace namespace) =
  _mkRequest "GET" ["/apis/autoscaling/v2beta1/namespaces/",toPath namespace,"/horizontalpodautoscalers/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data ReadNamespacedHorizontalPodAutoscaler  

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam ReadNamespacedHorizontalPodAutoscaler Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "exact" - Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
instance HasOptionalParam ReadNamespacedHorizontalPodAutoscaler Exact where
  applyOptionalParam req (Exact xs) =
    req `setQuery` toQuery ("exact", Just xs)

-- | /Optional Param/ "export" - Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
instance HasOptionalParam ReadNamespacedHorizontalPodAutoscaler Export where
  applyOptionalParam req (Export xs) =
    req `setQuery` toQuery ("export", Just xs)
-- | @application/json@
instance Produces ReadNamespacedHorizontalPodAutoscaler MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces ReadNamespacedHorizontalPodAutoscaler MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces ReadNamespacedHorizontalPodAutoscaler MimeYaml


-- *** readNamespacedHorizontalPodAutoscalerStatus

-- | @GET \/apis\/autoscaling\/v2beta1\/namespaces\/{namespace}\/horizontalpodautoscalers\/{name}\/status@
-- 
-- read status of the specified HorizontalPodAutoscaler
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
readNamespacedHorizontalPodAutoscalerStatus 
  :: Accept accept -- ^ request accept ('MimeType')
  -> Name -- ^ "name" -  name of the HorizontalPodAutoscaler
  -> Namespace -- ^ "namespace" -  object name and auth scope, such as for teams and projects
  -> KubernetesRequest ReadNamespacedHorizontalPodAutoscalerStatus MimeNoContent V2beta1HorizontalPodAutoscaler accept
readNamespacedHorizontalPodAutoscalerStatus  _ (Name name) (Namespace namespace) =
  _mkRequest "GET" ["/apis/autoscaling/v2beta1/namespaces/",toPath namespace,"/horizontalpodautoscalers/",toPath name,"/status"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data ReadNamespacedHorizontalPodAutoscalerStatus  

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam ReadNamespacedHorizontalPodAutoscalerStatus Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)
-- | @application/json@
instance Produces ReadNamespacedHorizontalPodAutoscalerStatus MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces ReadNamespacedHorizontalPodAutoscalerStatus MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces ReadNamespacedHorizontalPodAutoscalerStatus MimeYaml


-- *** replaceNamespacedHorizontalPodAutoscaler

-- | @PUT \/apis\/autoscaling\/v2beta1\/namespaces\/{namespace}\/horizontalpodautoscalers\/{name}@
-- 
-- replace the specified HorizontalPodAutoscaler
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
replaceNamespacedHorizontalPodAutoscaler 
  :: (Consumes ReplaceNamespacedHorizontalPodAutoscaler contentType, MimeRender contentType V2beta1HorizontalPodAutoscaler)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> V2beta1HorizontalPodAutoscaler -- ^ "body"
  -> Name -- ^ "name" -  name of the HorizontalPodAutoscaler
  -> Namespace -- ^ "namespace" -  object name and auth scope, such as for teams and projects
  -> KubernetesRequest ReplaceNamespacedHorizontalPodAutoscaler contentType V2beta1HorizontalPodAutoscaler accept
replaceNamespacedHorizontalPodAutoscaler _  _ body (Name name) (Namespace namespace) =
  _mkRequest "PUT" ["/apis/autoscaling/v2beta1/namespaces/",toPath namespace,"/horizontalpodautoscalers/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data ReplaceNamespacedHorizontalPodAutoscaler 
instance HasBodyParam ReplaceNamespacedHorizontalPodAutoscaler V2beta1HorizontalPodAutoscaler 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam ReplaceNamespacedHorizontalPodAutoscaler Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam ReplaceNamespacedHorizontalPodAutoscaler DryRun where
  applyOptionalParam req (DryRun xs) =
    req `setQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldManager" - fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
instance HasOptionalParam ReplaceNamespacedHorizontalPodAutoscaler FieldManager where
  applyOptionalParam req (FieldManager xs) =
    req `setQuery` toQuery ("fieldManager", Just xs)
    
-- | @*/*@
instance MimeType mtype => Consumes ReplaceNamespacedHorizontalPodAutoscaler mtype

-- | @application/json@
instance Produces ReplaceNamespacedHorizontalPodAutoscaler MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces ReplaceNamespacedHorizontalPodAutoscaler MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces ReplaceNamespacedHorizontalPodAutoscaler MimeYaml


-- *** replaceNamespacedHorizontalPodAutoscalerStatus

-- | @PUT \/apis\/autoscaling\/v2beta1\/namespaces\/{namespace}\/horizontalpodautoscalers\/{name}\/status@
-- 
-- replace status of the specified HorizontalPodAutoscaler
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
replaceNamespacedHorizontalPodAutoscalerStatus 
  :: (Consumes ReplaceNamespacedHorizontalPodAutoscalerStatus contentType, MimeRender contentType V2beta1HorizontalPodAutoscaler)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> V2beta1HorizontalPodAutoscaler -- ^ "body"
  -> Name -- ^ "name" -  name of the HorizontalPodAutoscaler
  -> Namespace -- ^ "namespace" -  object name and auth scope, such as for teams and projects
  -> KubernetesRequest ReplaceNamespacedHorizontalPodAutoscalerStatus contentType V2beta1HorizontalPodAutoscaler accept
replaceNamespacedHorizontalPodAutoscalerStatus _  _ body (Name name) (Namespace namespace) =
  _mkRequest "PUT" ["/apis/autoscaling/v2beta1/namespaces/",toPath namespace,"/horizontalpodautoscalers/",toPath name,"/status"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data ReplaceNamespacedHorizontalPodAutoscalerStatus 
instance HasBodyParam ReplaceNamespacedHorizontalPodAutoscalerStatus V2beta1HorizontalPodAutoscaler 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam ReplaceNamespacedHorizontalPodAutoscalerStatus Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam ReplaceNamespacedHorizontalPodAutoscalerStatus DryRun where
  applyOptionalParam req (DryRun xs) =
    req `setQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldManager" - fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
instance HasOptionalParam ReplaceNamespacedHorizontalPodAutoscalerStatus FieldManager where
  applyOptionalParam req (FieldManager xs) =
    req `setQuery` toQuery ("fieldManager", Just xs)
    
-- | @*/*@
instance MimeType mtype => Consumes ReplaceNamespacedHorizontalPodAutoscalerStatus mtype

-- | @application/json@
instance Produces ReplaceNamespacedHorizontalPodAutoscalerStatus MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces ReplaceNamespacedHorizontalPodAutoscalerStatus MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces ReplaceNamespacedHorizontalPodAutoscalerStatus MimeYaml

