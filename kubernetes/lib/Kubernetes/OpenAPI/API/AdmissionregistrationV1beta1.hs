{-
   Kubernetes

   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI Version: 3.0.1
   Kubernetes API version: release-1.16
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Kubernetes.OpenAPI.API.AdmissionregistrationV1beta1
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Kubernetes.OpenAPI.API.AdmissionregistrationV1beta1 where

import Kubernetes.OpenAPI.Core
import Kubernetes.OpenAPI.MimeTypes
import Kubernetes.OpenAPI.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** AdmissionregistrationV1beta1

-- *** createMutatingWebhookConfiguration

-- | @POST \/apis\/admissionregistration.k8s.io\/v1beta1\/mutatingwebhookconfigurations@
-- 
-- create a MutatingWebhookConfiguration
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
createMutatingWebhookConfiguration 
  :: (Consumes CreateMutatingWebhookConfiguration contentType, MimeRender contentType V1beta1MutatingWebhookConfiguration)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> V1beta1MutatingWebhookConfiguration -- ^ "body"
  -> KubernetesRequest CreateMutatingWebhookConfiguration contentType V1beta1MutatingWebhookConfiguration accept
createMutatingWebhookConfiguration _  _ body =
  _mkRequest "POST" ["/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data CreateMutatingWebhookConfiguration 
instance HasBodyParam CreateMutatingWebhookConfiguration V1beta1MutatingWebhookConfiguration 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam CreateMutatingWebhookConfiguration Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam CreateMutatingWebhookConfiguration DryRun where
  applyOptionalParam req (DryRun xs) =
    req `setQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldManager" - fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
instance HasOptionalParam CreateMutatingWebhookConfiguration FieldManager where
  applyOptionalParam req (FieldManager xs) =
    req `setQuery` toQuery ("fieldManager", Just xs)
    
-- | @*/*@
instance MimeType mtype => Consumes CreateMutatingWebhookConfiguration mtype

-- | @application/json@
instance Produces CreateMutatingWebhookConfiguration MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces CreateMutatingWebhookConfiguration MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces CreateMutatingWebhookConfiguration MimeYaml


-- *** createValidatingWebhookConfiguration

-- | @POST \/apis\/admissionregistration.k8s.io\/v1beta1\/validatingwebhookconfigurations@
-- 
-- create a ValidatingWebhookConfiguration
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
createValidatingWebhookConfiguration 
  :: (Consumes CreateValidatingWebhookConfiguration contentType, MimeRender contentType V1beta1ValidatingWebhookConfiguration)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> V1beta1ValidatingWebhookConfiguration -- ^ "body"
  -> KubernetesRequest CreateValidatingWebhookConfiguration contentType V1beta1ValidatingWebhookConfiguration accept
createValidatingWebhookConfiguration _  _ body =
  _mkRequest "POST" ["/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data CreateValidatingWebhookConfiguration 
instance HasBodyParam CreateValidatingWebhookConfiguration V1beta1ValidatingWebhookConfiguration 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam CreateValidatingWebhookConfiguration Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam CreateValidatingWebhookConfiguration DryRun where
  applyOptionalParam req (DryRun xs) =
    req `setQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldManager" - fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
instance HasOptionalParam CreateValidatingWebhookConfiguration FieldManager where
  applyOptionalParam req (FieldManager xs) =
    req `setQuery` toQuery ("fieldManager", Just xs)
    
-- | @*/*@
instance MimeType mtype => Consumes CreateValidatingWebhookConfiguration mtype

-- | @application/json@
instance Produces CreateValidatingWebhookConfiguration MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces CreateValidatingWebhookConfiguration MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces CreateValidatingWebhookConfiguration MimeYaml


-- *** deleteCollectionMutatingWebhookConfiguration

-- | @DELETE \/apis\/admissionregistration.k8s.io\/v1beta1\/mutatingwebhookconfigurations@
-- 
-- delete collection of MutatingWebhookConfiguration
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
deleteCollectionMutatingWebhookConfiguration 
  :: (Consumes DeleteCollectionMutatingWebhookConfiguration contentType)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> KubernetesRequest DeleteCollectionMutatingWebhookConfiguration contentType V1Status accept
deleteCollectionMutatingWebhookConfiguration _  _ =
  _mkRequest "DELETE" ["/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data DeleteCollectionMutatingWebhookConfiguration 
instance HasBodyParam DeleteCollectionMutatingWebhookConfiguration V1DeleteOptions 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam DeleteCollectionMutatingWebhookConfiguration Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "continue" - The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
instance HasOptionalParam DeleteCollectionMutatingWebhookConfiguration Continue where
  applyOptionalParam req (Continue xs) =
    req `setQuery` toQuery ("continue", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam DeleteCollectionMutatingWebhookConfiguration DryRun where
  applyOptionalParam req (DryRun xs) =
    req `setQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldSelector" - A selector to restrict the list of returned objects by their fields. Defaults to everything.
instance HasOptionalParam DeleteCollectionMutatingWebhookConfiguration FieldSelector where
  applyOptionalParam req (FieldSelector xs) =
    req `setQuery` toQuery ("fieldSelector", Just xs)

-- | /Optional Param/ "gracePeriodSeconds" - The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
instance HasOptionalParam DeleteCollectionMutatingWebhookConfiguration GracePeriodSeconds where
  applyOptionalParam req (GracePeriodSeconds xs) =
    req `setQuery` toQuery ("gracePeriodSeconds", Just xs)

-- | /Optional Param/ "labelSelector" - A selector to restrict the list of returned objects by their labels. Defaults to everything.
instance HasOptionalParam DeleteCollectionMutatingWebhookConfiguration LabelSelector where
  applyOptionalParam req (LabelSelector xs) =
    req `setQuery` toQuery ("labelSelector", Just xs)

-- | /Optional Param/ "limit" - limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
instance HasOptionalParam DeleteCollectionMutatingWebhookConfiguration Limit where
  applyOptionalParam req (Limit xs) =
    req `setQuery` toQuery ("limit", Just xs)

-- | /Optional Param/ "orphanDependents" - Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
instance HasOptionalParam DeleteCollectionMutatingWebhookConfiguration OrphanDependents where
  applyOptionalParam req (OrphanDependents xs) =
    req `setQuery` toQuery ("orphanDependents", Just xs)

-- | /Optional Param/ "propagationPolicy" - Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
instance HasOptionalParam DeleteCollectionMutatingWebhookConfiguration PropagationPolicy where
  applyOptionalParam req (PropagationPolicy xs) =
    req `setQuery` toQuery ("propagationPolicy", Just xs)

-- | /Optional Param/ "resourceVersion" - When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
instance HasOptionalParam DeleteCollectionMutatingWebhookConfiguration ResourceVersion where
  applyOptionalParam req (ResourceVersion xs) =
    req `setQuery` toQuery ("resourceVersion", Just xs)

-- | /Optional Param/ "timeoutSeconds" - Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
instance HasOptionalParam DeleteCollectionMutatingWebhookConfiguration TimeoutSeconds where
  applyOptionalParam req (TimeoutSeconds xs) =
    req `setQuery` toQuery ("timeoutSeconds", Just xs)
    
-- | @*/*@
instance MimeType mtype => Consumes DeleteCollectionMutatingWebhookConfiguration mtype

-- | @application/json@
instance Produces DeleteCollectionMutatingWebhookConfiguration MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces DeleteCollectionMutatingWebhookConfiguration MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces DeleteCollectionMutatingWebhookConfiguration MimeYaml


-- *** deleteCollectionValidatingWebhookConfiguration

-- | @DELETE \/apis\/admissionregistration.k8s.io\/v1beta1\/validatingwebhookconfigurations@
-- 
-- delete collection of ValidatingWebhookConfiguration
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
deleteCollectionValidatingWebhookConfiguration 
  :: (Consumes DeleteCollectionValidatingWebhookConfiguration contentType)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> KubernetesRequest DeleteCollectionValidatingWebhookConfiguration contentType V1Status accept
deleteCollectionValidatingWebhookConfiguration _  _ =
  _mkRequest "DELETE" ["/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data DeleteCollectionValidatingWebhookConfiguration 
instance HasBodyParam DeleteCollectionValidatingWebhookConfiguration V1DeleteOptions 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam DeleteCollectionValidatingWebhookConfiguration Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "continue" - The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
instance HasOptionalParam DeleteCollectionValidatingWebhookConfiguration Continue where
  applyOptionalParam req (Continue xs) =
    req `setQuery` toQuery ("continue", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam DeleteCollectionValidatingWebhookConfiguration DryRun where
  applyOptionalParam req (DryRun xs) =
    req `setQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldSelector" - A selector to restrict the list of returned objects by their fields. Defaults to everything.
instance HasOptionalParam DeleteCollectionValidatingWebhookConfiguration FieldSelector where
  applyOptionalParam req (FieldSelector xs) =
    req `setQuery` toQuery ("fieldSelector", Just xs)

-- | /Optional Param/ "gracePeriodSeconds" - The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
instance HasOptionalParam DeleteCollectionValidatingWebhookConfiguration GracePeriodSeconds where
  applyOptionalParam req (GracePeriodSeconds xs) =
    req `setQuery` toQuery ("gracePeriodSeconds", Just xs)

-- | /Optional Param/ "labelSelector" - A selector to restrict the list of returned objects by their labels. Defaults to everything.
instance HasOptionalParam DeleteCollectionValidatingWebhookConfiguration LabelSelector where
  applyOptionalParam req (LabelSelector xs) =
    req `setQuery` toQuery ("labelSelector", Just xs)

-- | /Optional Param/ "limit" - limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
instance HasOptionalParam DeleteCollectionValidatingWebhookConfiguration Limit where
  applyOptionalParam req (Limit xs) =
    req `setQuery` toQuery ("limit", Just xs)

-- | /Optional Param/ "orphanDependents" - Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
instance HasOptionalParam DeleteCollectionValidatingWebhookConfiguration OrphanDependents where
  applyOptionalParam req (OrphanDependents xs) =
    req `setQuery` toQuery ("orphanDependents", Just xs)

-- | /Optional Param/ "propagationPolicy" - Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
instance HasOptionalParam DeleteCollectionValidatingWebhookConfiguration PropagationPolicy where
  applyOptionalParam req (PropagationPolicy xs) =
    req `setQuery` toQuery ("propagationPolicy", Just xs)

-- | /Optional Param/ "resourceVersion" - When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
instance HasOptionalParam DeleteCollectionValidatingWebhookConfiguration ResourceVersion where
  applyOptionalParam req (ResourceVersion xs) =
    req `setQuery` toQuery ("resourceVersion", Just xs)

-- | /Optional Param/ "timeoutSeconds" - Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
instance HasOptionalParam DeleteCollectionValidatingWebhookConfiguration TimeoutSeconds where
  applyOptionalParam req (TimeoutSeconds xs) =
    req `setQuery` toQuery ("timeoutSeconds", Just xs)
    
-- | @*/*@
instance MimeType mtype => Consumes DeleteCollectionValidatingWebhookConfiguration mtype

-- | @application/json@
instance Produces DeleteCollectionValidatingWebhookConfiguration MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces DeleteCollectionValidatingWebhookConfiguration MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces DeleteCollectionValidatingWebhookConfiguration MimeYaml


-- *** deleteMutatingWebhookConfiguration

-- | @DELETE \/apis\/admissionregistration.k8s.io\/v1beta1\/mutatingwebhookconfigurations\/{name}@
-- 
-- delete a MutatingWebhookConfiguration
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
deleteMutatingWebhookConfiguration 
  :: (Consumes DeleteMutatingWebhookConfiguration contentType)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Name -- ^ "name" -  name of the MutatingWebhookConfiguration
  -> KubernetesRequest DeleteMutatingWebhookConfiguration contentType V1Status accept
deleteMutatingWebhookConfiguration _  _ (Name name) =
  _mkRequest "DELETE" ["/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data DeleteMutatingWebhookConfiguration 
instance HasBodyParam DeleteMutatingWebhookConfiguration V1DeleteOptions 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam DeleteMutatingWebhookConfiguration Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam DeleteMutatingWebhookConfiguration DryRun where
  applyOptionalParam req (DryRun xs) =
    req `setQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "gracePeriodSeconds" - The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
instance HasOptionalParam DeleteMutatingWebhookConfiguration GracePeriodSeconds where
  applyOptionalParam req (GracePeriodSeconds xs) =
    req `setQuery` toQuery ("gracePeriodSeconds", Just xs)

-- | /Optional Param/ "orphanDependents" - Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
instance HasOptionalParam DeleteMutatingWebhookConfiguration OrphanDependents where
  applyOptionalParam req (OrphanDependents xs) =
    req `setQuery` toQuery ("orphanDependents", Just xs)

-- | /Optional Param/ "propagationPolicy" - Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
instance HasOptionalParam DeleteMutatingWebhookConfiguration PropagationPolicy where
  applyOptionalParam req (PropagationPolicy xs) =
    req `setQuery` toQuery ("propagationPolicy", Just xs)
    
-- | @*/*@
instance MimeType mtype => Consumes DeleteMutatingWebhookConfiguration mtype

-- | @application/json@
instance Produces DeleteMutatingWebhookConfiguration MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces DeleteMutatingWebhookConfiguration MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces DeleteMutatingWebhookConfiguration MimeYaml


-- *** deleteValidatingWebhookConfiguration

-- | @DELETE \/apis\/admissionregistration.k8s.io\/v1beta1\/validatingwebhookconfigurations\/{name}@
-- 
-- delete a ValidatingWebhookConfiguration
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
deleteValidatingWebhookConfiguration 
  :: (Consumes DeleteValidatingWebhookConfiguration contentType)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Name -- ^ "name" -  name of the ValidatingWebhookConfiguration
  -> KubernetesRequest DeleteValidatingWebhookConfiguration contentType V1Status accept
deleteValidatingWebhookConfiguration _  _ (Name name) =
  _mkRequest "DELETE" ["/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data DeleteValidatingWebhookConfiguration 
instance HasBodyParam DeleteValidatingWebhookConfiguration V1DeleteOptions 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam DeleteValidatingWebhookConfiguration Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam DeleteValidatingWebhookConfiguration DryRun where
  applyOptionalParam req (DryRun xs) =
    req `setQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "gracePeriodSeconds" - The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
instance HasOptionalParam DeleteValidatingWebhookConfiguration GracePeriodSeconds where
  applyOptionalParam req (GracePeriodSeconds xs) =
    req `setQuery` toQuery ("gracePeriodSeconds", Just xs)

-- | /Optional Param/ "orphanDependents" - Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
instance HasOptionalParam DeleteValidatingWebhookConfiguration OrphanDependents where
  applyOptionalParam req (OrphanDependents xs) =
    req `setQuery` toQuery ("orphanDependents", Just xs)

-- | /Optional Param/ "propagationPolicy" - Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
instance HasOptionalParam DeleteValidatingWebhookConfiguration PropagationPolicy where
  applyOptionalParam req (PropagationPolicy xs) =
    req `setQuery` toQuery ("propagationPolicy", Just xs)
    
-- | @*/*@
instance MimeType mtype => Consumes DeleteValidatingWebhookConfiguration mtype

-- | @application/json@
instance Produces DeleteValidatingWebhookConfiguration MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces DeleteValidatingWebhookConfiguration MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces DeleteValidatingWebhookConfiguration MimeYaml


-- *** getAPIResources

-- | @GET \/apis\/admissionregistration.k8s.io\/v1beta1\/@
-- 
-- get available resources
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
getAPIResources 
  :: Accept accept -- ^ request accept ('MimeType')
  -> KubernetesRequest GetAPIResources MimeNoContent V1APIResourceList accept
getAPIResources  _ =
  _mkRequest "GET" ["/apis/admissionregistration.k8s.io/v1beta1/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data GetAPIResources  
-- | @application/json@
instance Produces GetAPIResources MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces GetAPIResources MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces GetAPIResources MimeYaml


-- *** listMutatingWebhookConfiguration

-- | @GET \/apis\/admissionregistration.k8s.io\/v1beta1\/mutatingwebhookconfigurations@
-- 
-- list or watch objects of kind MutatingWebhookConfiguration
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
listMutatingWebhookConfiguration 
  :: Accept accept -- ^ request accept ('MimeType')
  -> KubernetesRequest ListMutatingWebhookConfiguration MimeNoContent V1beta1MutatingWebhookConfigurationList accept
listMutatingWebhookConfiguration  _ =
  _mkRequest "GET" ["/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data ListMutatingWebhookConfiguration  

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam ListMutatingWebhookConfiguration Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "allowWatchBookmarks" - allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.  This field is beta.
instance HasOptionalParam ListMutatingWebhookConfiguration AllowWatchBookmarks where
  applyOptionalParam req (AllowWatchBookmarks xs) =
    req `setQuery` toQuery ("allowWatchBookmarks", Just xs)

-- | /Optional Param/ "continue" - The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
instance HasOptionalParam ListMutatingWebhookConfiguration Continue where
  applyOptionalParam req (Continue xs) =
    req `setQuery` toQuery ("continue", Just xs)

-- | /Optional Param/ "fieldSelector" - A selector to restrict the list of returned objects by their fields. Defaults to everything.
instance HasOptionalParam ListMutatingWebhookConfiguration FieldSelector where
  applyOptionalParam req (FieldSelector xs) =
    req `setQuery` toQuery ("fieldSelector", Just xs)

-- | /Optional Param/ "labelSelector" - A selector to restrict the list of returned objects by their labels. Defaults to everything.
instance HasOptionalParam ListMutatingWebhookConfiguration LabelSelector where
  applyOptionalParam req (LabelSelector xs) =
    req `setQuery` toQuery ("labelSelector", Just xs)

-- | /Optional Param/ "limit" - limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
instance HasOptionalParam ListMutatingWebhookConfiguration Limit where
  applyOptionalParam req (Limit xs) =
    req `setQuery` toQuery ("limit", Just xs)

-- | /Optional Param/ "resourceVersion" - When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
instance HasOptionalParam ListMutatingWebhookConfiguration ResourceVersion where
  applyOptionalParam req (ResourceVersion xs) =
    req `setQuery` toQuery ("resourceVersion", Just xs)

-- | /Optional Param/ "timeoutSeconds" - Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
instance HasOptionalParam ListMutatingWebhookConfiguration TimeoutSeconds where
  applyOptionalParam req (TimeoutSeconds xs) =
    req `setQuery` toQuery ("timeoutSeconds", Just xs)

-- | /Optional Param/ "watch" - Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
instance HasOptionalParam ListMutatingWebhookConfiguration Watch where
  applyOptionalParam req (Watch xs) =
    req `setQuery` toQuery ("watch", Just xs)
-- | @application/json@
instance Produces ListMutatingWebhookConfiguration MimeJSON
-- | @application/json;stream=watch@
instance Produces ListMutatingWebhookConfiguration MimeJsonstreamwatch
-- | @application/vnd.kubernetes.protobuf@
instance Produces ListMutatingWebhookConfiguration MimeVndKubernetesProtobuf
-- | @application/vnd.kubernetes.protobuf;stream=watch@
instance Produces ListMutatingWebhookConfiguration MimeVndKubernetesProtobufstreamwatch
-- | @application/yaml@
instance Produces ListMutatingWebhookConfiguration MimeYaml


-- *** listValidatingWebhookConfiguration

-- | @GET \/apis\/admissionregistration.k8s.io\/v1beta1\/validatingwebhookconfigurations@
-- 
-- list or watch objects of kind ValidatingWebhookConfiguration
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
listValidatingWebhookConfiguration 
  :: Accept accept -- ^ request accept ('MimeType')
  -> KubernetesRequest ListValidatingWebhookConfiguration MimeNoContent V1beta1ValidatingWebhookConfigurationList accept
listValidatingWebhookConfiguration  _ =
  _mkRequest "GET" ["/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data ListValidatingWebhookConfiguration  

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam ListValidatingWebhookConfiguration Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "allowWatchBookmarks" - allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.  This field is beta.
instance HasOptionalParam ListValidatingWebhookConfiguration AllowWatchBookmarks where
  applyOptionalParam req (AllowWatchBookmarks xs) =
    req `setQuery` toQuery ("allowWatchBookmarks", Just xs)

-- | /Optional Param/ "continue" - The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
instance HasOptionalParam ListValidatingWebhookConfiguration Continue where
  applyOptionalParam req (Continue xs) =
    req `setQuery` toQuery ("continue", Just xs)

-- | /Optional Param/ "fieldSelector" - A selector to restrict the list of returned objects by their fields. Defaults to everything.
instance HasOptionalParam ListValidatingWebhookConfiguration FieldSelector where
  applyOptionalParam req (FieldSelector xs) =
    req `setQuery` toQuery ("fieldSelector", Just xs)

-- | /Optional Param/ "labelSelector" - A selector to restrict the list of returned objects by their labels. Defaults to everything.
instance HasOptionalParam ListValidatingWebhookConfiguration LabelSelector where
  applyOptionalParam req (LabelSelector xs) =
    req `setQuery` toQuery ("labelSelector", Just xs)

-- | /Optional Param/ "limit" - limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
instance HasOptionalParam ListValidatingWebhookConfiguration Limit where
  applyOptionalParam req (Limit xs) =
    req `setQuery` toQuery ("limit", Just xs)

-- | /Optional Param/ "resourceVersion" - When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
instance HasOptionalParam ListValidatingWebhookConfiguration ResourceVersion where
  applyOptionalParam req (ResourceVersion xs) =
    req `setQuery` toQuery ("resourceVersion", Just xs)

-- | /Optional Param/ "timeoutSeconds" - Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
instance HasOptionalParam ListValidatingWebhookConfiguration TimeoutSeconds where
  applyOptionalParam req (TimeoutSeconds xs) =
    req `setQuery` toQuery ("timeoutSeconds", Just xs)

-- | /Optional Param/ "watch" - Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
instance HasOptionalParam ListValidatingWebhookConfiguration Watch where
  applyOptionalParam req (Watch xs) =
    req `setQuery` toQuery ("watch", Just xs)
-- | @application/json@
instance Produces ListValidatingWebhookConfiguration MimeJSON
-- | @application/json;stream=watch@
instance Produces ListValidatingWebhookConfiguration MimeJsonstreamwatch
-- | @application/vnd.kubernetes.protobuf@
instance Produces ListValidatingWebhookConfiguration MimeVndKubernetesProtobuf
-- | @application/vnd.kubernetes.protobuf;stream=watch@
instance Produces ListValidatingWebhookConfiguration MimeVndKubernetesProtobufstreamwatch
-- | @application/yaml@
instance Produces ListValidatingWebhookConfiguration MimeYaml


-- *** patchMutatingWebhookConfiguration

-- | @PATCH \/apis\/admissionregistration.k8s.io\/v1beta1\/mutatingwebhookconfigurations\/{name}@
-- 
-- partially update the specified MutatingWebhookConfiguration
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
patchMutatingWebhookConfiguration 
  :: (Consumes PatchMutatingWebhookConfiguration contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Body -- ^ "body"
  -> Name -- ^ "name" -  name of the MutatingWebhookConfiguration
  -> KubernetesRequest PatchMutatingWebhookConfiguration contentType V1beta1MutatingWebhookConfiguration accept
patchMutatingWebhookConfiguration _  _ body (Name name) =
  _mkRequest "PATCH" ["/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data PatchMutatingWebhookConfiguration 
instance HasBodyParam PatchMutatingWebhookConfiguration Body 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam PatchMutatingWebhookConfiguration Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam PatchMutatingWebhookConfiguration DryRun where
  applyOptionalParam req (DryRun xs) =
    req `setQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldManager" - fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
instance HasOptionalParam PatchMutatingWebhookConfiguration FieldManager where
  applyOptionalParam req (FieldManager xs) =
    req `setQuery` toQuery ("fieldManager", Just xs)

-- | /Optional Param/ "force" - Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
instance HasOptionalParam PatchMutatingWebhookConfiguration Force where
  applyOptionalParam req (Force xs) =
    req `setQuery` toQuery ("force", Just xs)

-- | @application/apply-patch+yaml@
instance Consumes PatchMutatingWebhookConfiguration MimeApplyPatchyaml
-- | @application/json-patch+json@
instance Consumes PatchMutatingWebhookConfiguration MimeJsonPatchjson
-- | @application/merge-patch+json@
instance Consumes PatchMutatingWebhookConfiguration MimeMergePatchjson
-- | @application/strategic-merge-patch+json@
instance Consumes PatchMutatingWebhookConfiguration MimeStrategicMergePatchjson

-- | @application/json@
instance Produces PatchMutatingWebhookConfiguration MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces PatchMutatingWebhookConfiguration MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces PatchMutatingWebhookConfiguration MimeYaml


-- *** patchValidatingWebhookConfiguration

-- | @PATCH \/apis\/admissionregistration.k8s.io\/v1beta1\/validatingwebhookconfigurations\/{name}@
-- 
-- partially update the specified ValidatingWebhookConfiguration
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
patchValidatingWebhookConfiguration 
  :: (Consumes PatchValidatingWebhookConfiguration contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Body -- ^ "body"
  -> Name -- ^ "name" -  name of the ValidatingWebhookConfiguration
  -> KubernetesRequest PatchValidatingWebhookConfiguration contentType V1beta1ValidatingWebhookConfiguration accept
patchValidatingWebhookConfiguration _  _ body (Name name) =
  _mkRequest "PATCH" ["/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data PatchValidatingWebhookConfiguration 
instance HasBodyParam PatchValidatingWebhookConfiguration Body 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam PatchValidatingWebhookConfiguration Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam PatchValidatingWebhookConfiguration DryRun where
  applyOptionalParam req (DryRun xs) =
    req `setQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldManager" - fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
instance HasOptionalParam PatchValidatingWebhookConfiguration FieldManager where
  applyOptionalParam req (FieldManager xs) =
    req `setQuery` toQuery ("fieldManager", Just xs)

-- | /Optional Param/ "force" - Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
instance HasOptionalParam PatchValidatingWebhookConfiguration Force where
  applyOptionalParam req (Force xs) =
    req `setQuery` toQuery ("force", Just xs)

-- | @application/apply-patch+yaml@
instance Consumes PatchValidatingWebhookConfiguration MimeApplyPatchyaml
-- | @application/json-patch+json@
instance Consumes PatchValidatingWebhookConfiguration MimeJsonPatchjson
-- | @application/merge-patch+json@
instance Consumes PatchValidatingWebhookConfiguration MimeMergePatchjson
-- | @application/strategic-merge-patch+json@
instance Consumes PatchValidatingWebhookConfiguration MimeStrategicMergePatchjson

-- | @application/json@
instance Produces PatchValidatingWebhookConfiguration MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces PatchValidatingWebhookConfiguration MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces PatchValidatingWebhookConfiguration MimeYaml


-- *** readMutatingWebhookConfiguration

-- | @GET \/apis\/admissionregistration.k8s.io\/v1beta1\/mutatingwebhookconfigurations\/{name}@
-- 
-- read the specified MutatingWebhookConfiguration
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
readMutatingWebhookConfiguration 
  :: Accept accept -- ^ request accept ('MimeType')
  -> Name -- ^ "name" -  name of the MutatingWebhookConfiguration
  -> KubernetesRequest ReadMutatingWebhookConfiguration MimeNoContent V1beta1MutatingWebhookConfiguration accept
readMutatingWebhookConfiguration  _ (Name name) =
  _mkRequest "GET" ["/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data ReadMutatingWebhookConfiguration  

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam ReadMutatingWebhookConfiguration Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "exact" - Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
instance HasOptionalParam ReadMutatingWebhookConfiguration Exact where
  applyOptionalParam req (Exact xs) =
    req `setQuery` toQuery ("exact", Just xs)

-- | /Optional Param/ "export" - Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
instance HasOptionalParam ReadMutatingWebhookConfiguration Export where
  applyOptionalParam req (Export xs) =
    req `setQuery` toQuery ("export", Just xs)
-- | @application/json@
instance Produces ReadMutatingWebhookConfiguration MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces ReadMutatingWebhookConfiguration MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces ReadMutatingWebhookConfiguration MimeYaml


-- *** readValidatingWebhookConfiguration

-- | @GET \/apis\/admissionregistration.k8s.io\/v1beta1\/validatingwebhookconfigurations\/{name}@
-- 
-- read the specified ValidatingWebhookConfiguration
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
readValidatingWebhookConfiguration 
  :: Accept accept -- ^ request accept ('MimeType')
  -> Name -- ^ "name" -  name of the ValidatingWebhookConfiguration
  -> KubernetesRequest ReadValidatingWebhookConfiguration MimeNoContent V1beta1ValidatingWebhookConfiguration accept
readValidatingWebhookConfiguration  _ (Name name) =
  _mkRequest "GET" ["/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data ReadValidatingWebhookConfiguration  

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam ReadValidatingWebhookConfiguration Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "exact" - Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
instance HasOptionalParam ReadValidatingWebhookConfiguration Exact where
  applyOptionalParam req (Exact xs) =
    req `setQuery` toQuery ("exact", Just xs)

-- | /Optional Param/ "export" - Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
instance HasOptionalParam ReadValidatingWebhookConfiguration Export where
  applyOptionalParam req (Export xs) =
    req `setQuery` toQuery ("export", Just xs)
-- | @application/json@
instance Produces ReadValidatingWebhookConfiguration MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces ReadValidatingWebhookConfiguration MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces ReadValidatingWebhookConfiguration MimeYaml


-- *** replaceMutatingWebhookConfiguration

-- | @PUT \/apis\/admissionregistration.k8s.io\/v1beta1\/mutatingwebhookconfigurations\/{name}@
-- 
-- replace the specified MutatingWebhookConfiguration
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
replaceMutatingWebhookConfiguration 
  :: (Consumes ReplaceMutatingWebhookConfiguration contentType, MimeRender contentType V1beta1MutatingWebhookConfiguration)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> V1beta1MutatingWebhookConfiguration -- ^ "body"
  -> Name -- ^ "name" -  name of the MutatingWebhookConfiguration
  -> KubernetesRequest ReplaceMutatingWebhookConfiguration contentType V1beta1MutatingWebhookConfiguration accept
replaceMutatingWebhookConfiguration _  _ body (Name name) =
  _mkRequest "PUT" ["/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data ReplaceMutatingWebhookConfiguration 
instance HasBodyParam ReplaceMutatingWebhookConfiguration V1beta1MutatingWebhookConfiguration 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam ReplaceMutatingWebhookConfiguration Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam ReplaceMutatingWebhookConfiguration DryRun where
  applyOptionalParam req (DryRun xs) =
    req `setQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldManager" - fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
instance HasOptionalParam ReplaceMutatingWebhookConfiguration FieldManager where
  applyOptionalParam req (FieldManager xs) =
    req `setQuery` toQuery ("fieldManager", Just xs)
    
-- | @*/*@
instance MimeType mtype => Consumes ReplaceMutatingWebhookConfiguration mtype

-- | @application/json@
instance Produces ReplaceMutatingWebhookConfiguration MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces ReplaceMutatingWebhookConfiguration MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces ReplaceMutatingWebhookConfiguration MimeYaml


-- *** replaceValidatingWebhookConfiguration

-- | @PUT \/apis\/admissionregistration.k8s.io\/v1beta1\/validatingwebhookconfigurations\/{name}@
-- 
-- replace the specified ValidatingWebhookConfiguration
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
replaceValidatingWebhookConfiguration 
  :: (Consumes ReplaceValidatingWebhookConfiguration contentType, MimeRender contentType V1beta1ValidatingWebhookConfiguration)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> V1beta1ValidatingWebhookConfiguration -- ^ "body"
  -> Name -- ^ "name" -  name of the ValidatingWebhookConfiguration
  -> KubernetesRequest ReplaceValidatingWebhookConfiguration contentType V1beta1ValidatingWebhookConfiguration accept
replaceValidatingWebhookConfiguration _  _ body (Name name) =
  _mkRequest "PUT" ["/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data ReplaceValidatingWebhookConfiguration 
instance HasBodyParam ReplaceValidatingWebhookConfiguration V1beta1ValidatingWebhookConfiguration 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam ReplaceValidatingWebhookConfiguration Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam ReplaceValidatingWebhookConfiguration DryRun where
  applyOptionalParam req (DryRun xs) =
    req `setQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldManager" - fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
instance HasOptionalParam ReplaceValidatingWebhookConfiguration FieldManager where
  applyOptionalParam req (FieldManager xs) =
    req `setQuery` toQuery ("fieldManager", Just xs)
    
-- | @*/*@
instance MimeType mtype => Consumes ReplaceValidatingWebhookConfiguration mtype

-- | @application/json@
instance Produces ReplaceValidatingWebhookConfiguration MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces ReplaceValidatingWebhookConfiguration MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces ReplaceValidatingWebhookConfiguration MimeYaml

