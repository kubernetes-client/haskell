{-
   Kubernetes

   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI Version: 3.0.1
   Kubernetes API version: v1.15.5
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Kubernetes.OpenAPI.API.CustomObjects
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Kubernetes.OpenAPI.API.CustomObjects where

import Kubernetes.OpenAPI.Core
import Kubernetes.OpenAPI.MimeTypes
import Kubernetes.OpenAPI.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** CustomObjects

-- *** createClusterCustomObject

-- | @POST \/apis\/{group}\/{version}\/{plural}@
-- 
-- Creates a cluster scoped Custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
createClusterCustomObject 
  :: (Consumes CreateClusterCustomObject contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Body -- ^ "body" -  The JSON schema of the Resource to create.
  -> Group -- ^ "group" -  The custom resource's group name
  -> Version -- ^ "version" -  The custom resource's version
  -> Plural -- ^ "plural" -  The custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> KubernetesRequest CreateClusterCustomObject contentType A.Value MimeJSON
createClusterCustomObject _ body (Group group) (Version version) (Plural plural) =
  _mkRequest "POST" ["/apis/",toPath group,"/",toPath version,"/",toPath plural]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data CreateClusterCustomObject 

-- | /Body Param/ "body" - The JSON schema of the Resource to create.
instance HasBodyParam CreateClusterCustomObject Body 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam CreateClusterCustomObject Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)
    
-- | @*/*@
instance MimeType mtype => Consumes CreateClusterCustomObject mtype

-- | @application/json@
instance Produces CreateClusterCustomObject MimeJSON


-- *** createNamespacedCustomObject

-- | @POST \/apis\/{group}\/{version}\/namespaces\/{namespace}\/{plural}@
-- 
-- Creates a namespace scoped Custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
createNamespacedCustomObject 
  :: (Consumes CreateNamespacedCustomObject contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Body -- ^ "body" -  The JSON schema of the Resource to create.
  -> Group -- ^ "group" -  The custom resource's group name
  -> Version -- ^ "version" -  The custom resource's version
  -> Namespace -- ^ "namespace" -  The custom resource's namespace
  -> Plural -- ^ "plural" -  The custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> KubernetesRequest CreateNamespacedCustomObject contentType A.Value MimeJSON
createNamespacedCustomObject _ body (Group group) (Version version) (Namespace namespace) (Plural plural) =
  _mkRequest "POST" ["/apis/",toPath group,"/",toPath version,"/namespaces/",toPath namespace,"/",toPath plural]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data CreateNamespacedCustomObject 

-- | /Body Param/ "body" - The JSON schema of the Resource to create.
instance HasBodyParam CreateNamespacedCustomObject Body 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam CreateNamespacedCustomObject Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)
    
-- | @*/*@
instance MimeType mtype => Consumes CreateNamespacedCustomObject mtype

-- | @application/json@
instance Produces CreateNamespacedCustomObject MimeJSON


-- *** deleteClusterCustomObject

-- | @DELETE \/apis\/{group}\/{version}\/{plural}\/{name}@
-- 
-- Deletes the specified cluster scoped custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
deleteClusterCustomObject 
  :: (Consumes DeleteClusterCustomObject contentType, MimeRender contentType V1DeleteOptions)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> V1DeleteOptions -- ^ "body"
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Plural -- ^ "plural" -  the custom object's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest DeleteClusterCustomObject contentType A.Value MimeJSON
deleteClusterCustomObject _ body (Group group) (Version version) (Plural plural) (Name name) =
  _mkRequest "DELETE" ["/apis/",toPath group,"/",toPath version,"/",toPath plural,"/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data DeleteClusterCustomObject 
instance HasBodyParam DeleteClusterCustomObject V1DeleteOptions 

-- | /Optional Param/ "gracePeriodSeconds" - The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
instance HasOptionalParam DeleteClusterCustomObject GracePeriodSeconds where
  applyOptionalParam req (GracePeriodSeconds xs) =
    req `setQuery` toQuery ("gracePeriodSeconds", Just xs)

-- | /Optional Param/ "orphanDependents" - Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
instance HasOptionalParam DeleteClusterCustomObject OrphanDependents where
  applyOptionalParam req (OrphanDependents xs) =
    req `setQuery` toQuery ("orphanDependents", Just xs)

-- | /Optional Param/ "propagationPolicy" - Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.
instance HasOptionalParam DeleteClusterCustomObject PropagationPolicy where
  applyOptionalParam req (PropagationPolicy xs) =
    req `setQuery` toQuery ("propagationPolicy", Just xs)
    
-- | @*/*@
instance MimeType mtype => Consumes DeleteClusterCustomObject mtype

-- | @application/json@
instance Produces DeleteClusterCustomObject MimeJSON


-- *** deleteNamespacedCustomObject

-- | @DELETE \/apis\/{group}\/{version}\/namespaces\/{namespace}\/{plural}\/{name}@
-- 
-- Deletes the specified namespace scoped custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
deleteNamespacedCustomObject 
  :: (Consumes DeleteNamespacedCustomObject contentType, MimeRender contentType V1DeleteOptions)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> V1DeleteOptions -- ^ "body"
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Namespace -- ^ "namespace" -  The custom resource's namespace
  -> Plural -- ^ "plural" -  the custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest DeleteNamespacedCustomObject contentType A.Value MimeJSON
deleteNamespacedCustomObject _ body (Group group) (Version version) (Namespace namespace) (Plural plural) (Name name) =
  _mkRequest "DELETE" ["/apis/",toPath group,"/",toPath version,"/namespaces/",toPath namespace,"/",toPath plural,"/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data DeleteNamespacedCustomObject 
instance HasBodyParam DeleteNamespacedCustomObject V1DeleteOptions 

-- | /Optional Param/ "gracePeriodSeconds" - The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
instance HasOptionalParam DeleteNamespacedCustomObject GracePeriodSeconds where
  applyOptionalParam req (GracePeriodSeconds xs) =
    req `setQuery` toQuery ("gracePeriodSeconds", Just xs)

-- | /Optional Param/ "orphanDependents" - Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
instance HasOptionalParam DeleteNamespacedCustomObject OrphanDependents where
  applyOptionalParam req (OrphanDependents xs) =
    req `setQuery` toQuery ("orphanDependents", Just xs)

-- | /Optional Param/ "propagationPolicy" - Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.
instance HasOptionalParam DeleteNamespacedCustomObject PropagationPolicy where
  applyOptionalParam req (PropagationPolicy xs) =
    req `setQuery` toQuery ("propagationPolicy", Just xs)
    
-- | @*/*@
instance MimeType mtype => Consumes DeleteNamespacedCustomObject mtype

-- | @application/json@
instance Produces DeleteNamespacedCustomObject MimeJSON


-- *** getClusterCustomObject

-- | @GET \/apis\/{group}\/{version}\/{plural}\/{name}@
-- 
-- Returns a cluster scoped custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
getClusterCustomObject 
  :: Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Plural -- ^ "plural" -  the custom object's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest GetClusterCustomObject MimeNoContent A.Value MimeJSON
getClusterCustomObject (Group group) (Version version) (Plural plural) (Name name) =
  _mkRequest "GET" ["/apis/",toPath group,"/",toPath version,"/",toPath plural,"/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data GetClusterCustomObject  
-- | @application/json@
instance Produces GetClusterCustomObject MimeJSON


-- *** getClusterCustomObjectScale

-- | @GET \/apis\/{group}\/{version}\/{plural}\/{name}\/scale@
-- 
-- read scale of the specified custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
getClusterCustomObjectScale 
  :: Accept accept -- ^ request accept ('MimeType')
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Plural -- ^ "plural" -  the custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest GetClusterCustomObjectScale MimeNoContent A.Value accept
getClusterCustomObjectScale  _ (Group group) (Version version) (Plural plural) (Name name) =
  _mkRequest "GET" ["/apis/",toPath group,"/",toPath version,"/",toPath plural,"/",toPath name,"/scale"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data GetClusterCustomObjectScale  
-- | @application/json@
instance Produces GetClusterCustomObjectScale MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces GetClusterCustomObjectScale MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces GetClusterCustomObjectScale MimeYaml


-- *** getClusterCustomObjectStatus

-- | @GET \/apis\/{group}\/{version}\/{plural}\/{name}\/status@
-- 
-- read status of the specified cluster scoped custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
getClusterCustomObjectStatus 
  :: Accept accept -- ^ request accept ('MimeType')
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Plural -- ^ "plural" -  the custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest GetClusterCustomObjectStatus MimeNoContent A.Value accept
getClusterCustomObjectStatus  _ (Group group) (Version version) (Plural plural) (Name name) =
  _mkRequest "GET" ["/apis/",toPath group,"/",toPath version,"/",toPath plural,"/",toPath name,"/status"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data GetClusterCustomObjectStatus  
-- | @application/json@
instance Produces GetClusterCustomObjectStatus MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces GetClusterCustomObjectStatus MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces GetClusterCustomObjectStatus MimeYaml


-- *** getNamespacedCustomObject

-- | @GET \/apis\/{group}\/{version}\/namespaces\/{namespace}\/{plural}\/{name}@
-- 
-- Returns a namespace scoped custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
getNamespacedCustomObject 
  :: Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Namespace -- ^ "namespace" -  The custom resource's namespace
  -> Plural -- ^ "plural" -  the custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest GetNamespacedCustomObject MimeNoContent A.Value MimeJSON
getNamespacedCustomObject (Group group) (Version version) (Namespace namespace) (Plural plural) (Name name) =
  _mkRequest "GET" ["/apis/",toPath group,"/",toPath version,"/namespaces/",toPath namespace,"/",toPath plural,"/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data GetNamespacedCustomObject  
-- | @application/json@
instance Produces GetNamespacedCustomObject MimeJSON


-- *** getNamespacedCustomObjectScale

-- | @GET \/apis\/{group}\/{version}\/namespaces\/{namespace}\/{plural}\/{name}\/scale@
-- 
-- read scale of the specified namespace scoped custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
getNamespacedCustomObjectScale 
  :: Accept accept -- ^ request accept ('MimeType')
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Namespace -- ^ "namespace" -  The custom resource's namespace
  -> Plural -- ^ "plural" -  the custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest GetNamespacedCustomObjectScale MimeNoContent A.Value accept
getNamespacedCustomObjectScale  _ (Group group) (Version version) (Namespace namespace) (Plural plural) (Name name) =
  _mkRequest "GET" ["/apis/",toPath group,"/",toPath version,"/namespaces/",toPath namespace,"/",toPath plural,"/",toPath name,"/scale"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data GetNamespacedCustomObjectScale  
-- | @application/json@
instance Produces GetNamespacedCustomObjectScale MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces GetNamespacedCustomObjectScale MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces GetNamespacedCustomObjectScale MimeYaml


-- *** getNamespacedCustomObjectStatus

-- | @GET \/apis\/{group}\/{version}\/namespaces\/{namespace}\/{plural}\/{name}\/status@
-- 
-- read status of the specified namespace scoped custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
getNamespacedCustomObjectStatus 
  :: Accept accept -- ^ request accept ('MimeType')
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Namespace -- ^ "namespace" -  The custom resource's namespace
  -> Plural -- ^ "plural" -  the custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest GetNamespacedCustomObjectStatus MimeNoContent A.Value accept
getNamespacedCustomObjectStatus  _ (Group group) (Version version) (Namespace namespace) (Plural plural) (Name name) =
  _mkRequest "GET" ["/apis/",toPath group,"/",toPath version,"/namespaces/",toPath namespace,"/",toPath plural,"/",toPath name,"/status"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data GetNamespacedCustomObjectStatus  
-- | @application/json@
instance Produces GetNamespacedCustomObjectStatus MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces GetNamespacedCustomObjectStatus MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces GetNamespacedCustomObjectStatus MimeYaml


-- *** listClusterCustomObject

-- | @GET \/apis\/{group}\/{version}\/{plural}@
-- 
-- list or watch cluster scoped custom objects
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
listClusterCustomObject 
  :: Accept accept -- ^ request accept ('MimeType')
  -> Group -- ^ "group" -  The custom resource's group name
  -> Version -- ^ "version" -  The custom resource's version
  -> Plural -- ^ "plural" -  The custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> KubernetesRequest ListClusterCustomObject MimeNoContent A.Value accept
listClusterCustomObject  _ (Group group) (Version version) (Plural plural) =
  _mkRequest "GET" ["/apis/",toPath group,"/",toPath version,"/",toPath plural]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data ListClusterCustomObject  

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam ListClusterCustomObject Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "fieldSelector" - A selector to restrict the list of returned objects by their fields. Defaults to everything.
instance HasOptionalParam ListClusterCustomObject FieldSelector where
  applyOptionalParam req (FieldSelector xs) =
    req `setQuery` toQuery ("fieldSelector", Just xs)

-- | /Optional Param/ "labelSelector" - A selector to restrict the list of returned objects by their labels. Defaults to everything.
instance HasOptionalParam ListClusterCustomObject LabelSelector where
  applyOptionalParam req (LabelSelector xs) =
    req `setQuery` toQuery ("labelSelector", Just xs)

-- | /Optional Param/ "resourceVersion" - When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
instance HasOptionalParam ListClusterCustomObject ResourceVersion where
  applyOptionalParam req (ResourceVersion xs) =
    req `setQuery` toQuery ("resourceVersion", Just xs)

-- | /Optional Param/ "timeoutSeconds" - Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
instance HasOptionalParam ListClusterCustomObject TimeoutSeconds where
  applyOptionalParam req (TimeoutSeconds xs) =
    req `setQuery` toQuery ("timeoutSeconds", Just xs)

-- | /Optional Param/ "watch" - Watch for changes to the described resources and return them as a stream of add, update, and remove notifications.
instance HasOptionalParam ListClusterCustomObject Watch where
  applyOptionalParam req (Watch xs) =
    req `setQuery` toQuery ("watch", Just xs)
-- | @application/json@
instance Produces ListClusterCustomObject MimeJSON
-- | @application/json;stream=watch@
instance Produces ListClusterCustomObject MimeJsonstreamwatch


-- *** listNamespacedCustomObject

-- | @GET \/apis\/{group}\/{version}\/namespaces\/{namespace}\/{plural}@
-- 
-- list or watch namespace scoped custom objects
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
listNamespacedCustomObject 
  :: Accept accept -- ^ request accept ('MimeType')
  -> Group -- ^ "group" -  The custom resource's group name
  -> Version -- ^ "version" -  The custom resource's version
  -> Namespace -- ^ "namespace" -  The custom resource's namespace
  -> Plural -- ^ "plural" -  The custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> KubernetesRequest ListNamespacedCustomObject MimeNoContent A.Value accept
listNamespacedCustomObject  _ (Group group) (Version version) (Namespace namespace) (Plural plural) =
  _mkRequest "GET" ["/apis/",toPath group,"/",toPath version,"/namespaces/",toPath namespace,"/",toPath plural]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data ListNamespacedCustomObject  

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed.
instance HasOptionalParam ListNamespacedCustomObject Pretty where
  applyOptionalParam req (Pretty xs) =
    req `setQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "fieldSelector" - A selector to restrict the list of returned objects by their fields. Defaults to everything.
instance HasOptionalParam ListNamespacedCustomObject FieldSelector where
  applyOptionalParam req (FieldSelector xs) =
    req `setQuery` toQuery ("fieldSelector", Just xs)

-- | /Optional Param/ "labelSelector" - A selector to restrict the list of returned objects by their labels. Defaults to everything.
instance HasOptionalParam ListNamespacedCustomObject LabelSelector where
  applyOptionalParam req (LabelSelector xs) =
    req `setQuery` toQuery ("labelSelector", Just xs)

-- | /Optional Param/ "resourceVersion" - When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
instance HasOptionalParam ListNamespacedCustomObject ResourceVersion where
  applyOptionalParam req (ResourceVersion xs) =
    req `setQuery` toQuery ("resourceVersion", Just xs)

-- | /Optional Param/ "timeoutSeconds" - Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
instance HasOptionalParam ListNamespacedCustomObject TimeoutSeconds where
  applyOptionalParam req (TimeoutSeconds xs) =
    req `setQuery` toQuery ("timeoutSeconds", Just xs)

-- | /Optional Param/ "watch" - Watch for changes to the described resources and return them as a stream of add, update, and remove notifications.
instance HasOptionalParam ListNamespacedCustomObject Watch where
  applyOptionalParam req (Watch xs) =
    req `setQuery` toQuery ("watch", Just xs)
-- | @application/json@
instance Produces ListNamespacedCustomObject MimeJSON
-- | @application/json;stream=watch@
instance Produces ListNamespacedCustomObject MimeJsonstreamwatch


-- *** patchClusterCustomObject

-- | @PATCH \/apis\/{group}\/{version}\/{plural}\/{name}@
-- 
-- patch the specified cluster scoped custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
patchClusterCustomObject 
  :: (Consumes PatchClusterCustomObject contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Body -- ^ "body" -  The JSON schema of the Resource to patch.
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Plural -- ^ "plural" -  the custom object's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest PatchClusterCustomObject contentType A.Value MimeJSON
patchClusterCustomObject _ body (Group group) (Version version) (Plural plural) (Name name) =
  _mkRequest "PATCH" ["/apis/",toPath group,"/",toPath version,"/",toPath plural,"/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data PatchClusterCustomObject 

-- | /Body Param/ "body" - The JSON schema of the Resource to patch.
instance HasBodyParam PatchClusterCustomObject Body 

-- | @application/json-patch+json@
instance Consumes PatchClusterCustomObject MimeJsonPatchjson
-- | @application/merge-patch+json@
instance Consumes PatchClusterCustomObject MimeMergePatchjson

-- | @application/json@
instance Produces PatchClusterCustomObject MimeJSON


-- *** patchClusterCustomObjectScale

-- | @PATCH \/apis\/{group}\/{version}\/{plural}\/{name}\/scale@
-- 
-- partially update scale of the specified cluster scoped custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
patchClusterCustomObjectScale 
  :: (Consumes PatchClusterCustomObjectScale contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Body -- ^ "body"
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Plural -- ^ "plural" -  the custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest PatchClusterCustomObjectScale contentType A.Value accept
patchClusterCustomObjectScale _  _ body (Group group) (Version version) (Plural plural) (Name name) =
  _mkRequest "PATCH" ["/apis/",toPath group,"/",toPath version,"/",toPath plural,"/",toPath name,"/scale"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data PatchClusterCustomObjectScale 
instance HasBodyParam PatchClusterCustomObjectScale Body 

-- | @application/json-patch+json@
instance Consumes PatchClusterCustomObjectScale MimeJsonPatchjson
-- | @application/merge-patch+json@
instance Consumes PatchClusterCustomObjectScale MimeMergePatchjson

-- | @application/json@
instance Produces PatchClusterCustomObjectScale MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces PatchClusterCustomObjectScale MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces PatchClusterCustomObjectScale MimeYaml


-- *** patchClusterCustomObjectStatus

-- | @PATCH \/apis\/{group}\/{version}\/{plural}\/{name}\/status@
-- 
-- partially update status of the specified cluster scoped custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
patchClusterCustomObjectStatus 
  :: (Consumes PatchClusterCustomObjectStatus contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Body -- ^ "body"
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Plural -- ^ "plural" -  the custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest PatchClusterCustomObjectStatus contentType A.Value accept
patchClusterCustomObjectStatus _  _ body (Group group) (Version version) (Plural plural) (Name name) =
  _mkRequest "PATCH" ["/apis/",toPath group,"/",toPath version,"/",toPath plural,"/",toPath name,"/status"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data PatchClusterCustomObjectStatus 
instance HasBodyParam PatchClusterCustomObjectStatus Body 

-- | @application/json-patch+json@
instance Consumes PatchClusterCustomObjectStatus MimeJsonPatchjson
-- | @application/merge-patch+json@
instance Consumes PatchClusterCustomObjectStatus MimeMergePatchjson

-- | @application/json@
instance Produces PatchClusterCustomObjectStatus MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces PatchClusterCustomObjectStatus MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces PatchClusterCustomObjectStatus MimeYaml


-- *** patchNamespacedCustomObject

-- | @PATCH \/apis\/{group}\/{version}\/namespaces\/{namespace}\/{plural}\/{name}@
-- 
-- patch the specified namespace scoped custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
patchNamespacedCustomObject 
  :: (Consumes PatchNamespacedCustomObject contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Body -- ^ "body" -  The JSON schema of the Resource to patch.
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Namespace -- ^ "namespace" -  The custom resource's namespace
  -> Plural -- ^ "plural" -  the custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest PatchNamespacedCustomObject contentType A.Value MimeJSON
patchNamespacedCustomObject _ body (Group group) (Version version) (Namespace namespace) (Plural plural) (Name name) =
  _mkRequest "PATCH" ["/apis/",toPath group,"/",toPath version,"/namespaces/",toPath namespace,"/",toPath plural,"/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data PatchNamespacedCustomObject 

-- | /Body Param/ "body" - The JSON schema of the Resource to patch.
instance HasBodyParam PatchNamespacedCustomObject Body 

-- | @application/json-patch+json@
instance Consumes PatchNamespacedCustomObject MimeJsonPatchjson
-- | @application/merge-patch+json@
instance Consumes PatchNamespacedCustomObject MimeMergePatchjson

-- | @application/json@
instance Produces PatchNamespacedCustomObject MimeJSON


-- *** patchNamespacedCustomObjectScale

-- | @PATCH \/apis\/{group}\/{version}\/namespaces\/{namespace}\/{plural}\/{name}\/scale@
-- 
-- partially update scale of the specified namespace scoped custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
patchNamespacedCustomObjectScale 
  :: (Consumes PatchNamespacedCustomObjectScale contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Body -- ^ "body"
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Namespace -- ^ "namespace" -  The custom resource's namespace
  -> Plural -- ^ "plural" -  the custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest PatchNamespacedCustomObjectScale contentType A.Value accept
patchNamespacedCustomObjectScale _  _ body (Group group) (Version version) (Namespace namespace) (Plural plural) (Name name) =
  _mkRequest "PATCH" ["/apis/",toPath group,"/",toPath version,"/namespaces/",toPath namespace,"/",toPath plural,"/",toPath name,"/scale"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data PatchNamespacedCustomObjectScale 
instance HasBodyParam PatchNamespacedCustomObjectScale Body 

-- | @application/json-patch+json@
instance Consumes PatchNamespacedCustomObjectScale MimeJsonPatchjson
-- | @application/merge-patch+json@
instance Consumes PatchNamespacedCustomObjectScale MimeMergePatchjson

-- | @application/json@
instance Produces PatchNamespacedCustomObjectScale MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces PatchNamespacedCustomObjectScale MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces PatchNamespacedCustomObjectScale MimeYaml


-- *** patchNamespacedCustomObjectStatus

-- | @PATCH \/apis\/{group}\/{version}\/namespaces\/{namespace}\/{plural}\/{name}\/status@
-- 
-- partially update status of the specified namespace scoped custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
patchNamespacedCustomObjectStatus 
  :: (Consumes PatchNamespacedCustomObjectStatus contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Body -- ^ "body"
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Namespace -- ^ "namespace" -  The custom resource's namespace
  -> Plural -- ^ "plural" -  the custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest PatchNamespacedCustomObjectStatus contentType A.Value accept
patchNamespacedCustomObjectStatus _  _ body (Group group) (Version version) (Namespace namespace) (Plural plural) (Name name) =
  _mkRequest "PATCH" ["/apis/",toPath group,"/",toPath version,"/namespaces/",toPath namespace,"/",toPath plural,"/",toPath name,"/status"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data PatchNamespacedCustomObjectStatus 
instance HasBodyParam PatchNamespacedCustomObjectStatus Body 

-- | @application/json-patch+json@
instance Consumes PatchNamespacedCustomObjectStatus MimeJsonPatchjson
-- | @application/merge-patch+json@
instance Consumes PatchNamespacedCustomObjectStatus MimeMergePatchjson

-- | @application/json@
instance Produces PatchNamespacedCustomObjectStatus MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces PatchNamespacedCustomObjectStatus MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces PatchNamespacedCustomObjectStatus MimeYaml


-- *** replaceClusterCustomObject

-- | @PUT \/apis\/{group}\/{version}\/{plural}\/{name}@
-- 
-- replace the specified cluster scoped custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
replaceClusterCustomObject 
  :: (Consumes ReplaceClusterCustomObject contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Body -- ^ "body" -  The JSON schema of the Resource to replace.
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Plural -- ^ "plural" -  the custom object's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest ReplaceClusterCustomObject contentType A.Value MimeJSON
replaceClusterCustomObject _ body (Group group) (Version version) (Plural plural) (Name name) =
  _mkRequest "PUT" ["/apis/",toPath group,"/",toPath version,"/",toPath plural,"/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data ReplaceClusterCustomObject 

-- | /Body Param/ "body" - The JSON schema of the Resource to replace.
instance HasBodyParam ReplaceClusterCustomObject Body 
    
-- | @*/*@
instance MimeType mtype => Consumes ReplaceClusterCustomObject mtype

-- | @application/json@
instance Produces ReplaceClusterCustomObject MimeJSON


-- *** replaceClusterCustomObjectScale

-- | @PUT \/apis\/{group}\/{version}\/{plural}\/{name}\/scale@
-- 
-- replace scale of the specified cluster scoped custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
replaceClusterCustomObjectScale 
  :: (Consumes ReplaceClusterCustomObjectScale contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Body -- ^ "body"
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Plural -- ^ "plural" -  the custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest ReplaceClusterCustomObjectScale contentType A.Value accept
replaceClusterCustomObjectScale _  _ body (Group group) (Version version) (Plural plural) (Name name) =
  _mkRequest "PUT" ["/apis/",toPath group,"/",toPath version,"/",toPath plural,"/",toPath name,"/scale"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data ReplaceClusterCustomObjectScale 
instance HasBodyParam ReplaceClusterCustomObjectScale Body 
    
-- | @*/*@
instance MimeType mtype => Consumes ReplaceClusterCustomObjectScale mtype

-- | @application/json@
instance Produces ReplaceClusterCustomObjectScale MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces ReplaceClusterCustomObjectScale MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces ReplaceClusterCustomObjectScale MimeYaml


-- *** replaceClusterCustomObjectStatus

-- | @PUT \/apis\/{group}\/{version}\/{plural}\/{name}\/status@
-- 
-- replace status of the cluster scoped specified custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
replaceClusterCustomObjectStatus 
  :: (Consumes ReplaceClusterCustomObjectStatus contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Body -- ^ "body"
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Plural -- ^ "plural" -  the custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest ReplaceClusterCustomObjectStatus contentType A.Value accept
replaceClusterCustomObjectStatus _  _ body (Group group) (Version version) (Plural plural) (Name name) =
  _mkRequest "PUT" ["/apis/",toPath group,"/",toPath version,"/",toPath plural,"/",toPath name,"/status"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data ReplaceClusterCustomObjectStatus 
instance HasBodyParam ReplaceClusterCustomObjectStatus Body 
    
-- | @*/*@
instance MimeType mtype => Consumes ReplaceClusterCustomObjectStatus mtype

-- | @application/json@
instance Produces ReplaceClusterCustomObjectStatus MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces ReplaceClusterCustomObjectStatus MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces ReplaceClusterCustomObjectStatus MimeYaml


-- *** replaceNamespacedCustomObject

-- | @PUT \/apis\/{group}\/{version}\/namespaces\/{namespace}\/{plural}\/{name}@
-- 
-- replace the specified namespace scoped custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
replaceNamespacedCustomObject 
  :: (Consumes ReplaceNamespacedCustomObject contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Body -- ^ "body" -  The JSON schema of the Resource to replace.
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Namespace -- ^ "namespace" -  The custom resource's namespace
  -> Plural -- ^ "plural" -  the custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest ReplaceNamespacedCustomObject contentType A.Value MimeJSON
replaceNamespacedCustomObject _ body (Group group) (Version version) (Namespace namespace) (Plural plural) (Name name) =
  _mkRequest "PUT" ["/apis/",toPath group,"/",toPath version,"/namespaces/",toPath namespace,"/",toPath plural,"/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data ReplaceNamespacedCustomObject 

-- | /Body Param/ "body" - The JSON schema of the Resource to replace.
instance HasBodyParam ReplaceNamespacedCustomObject Body 
    
-- | @*/*@
instance MimeType mtype => Consumes ReplaceNamespacedCustomObject mtype

-- | @application/json@
instance Produces ReplaceNamespacedCustomObject MimeJSON


-- *** replaceNamespacedCustomObjectScale

-- | @PUT \/apis\/{group}\/{version}\/namespaces\/{namespace}\/{plural}\/{name}\/scale@
-- 
-- replace scale of the specified namespace scoped custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
replaceNamespacedCustomObjectScale 
  :: (Consumes ReplaceNamespacedCustomObjectScale contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Body -- ^ "body"
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Namespace -- ^ "namespace" -  The custom resource's namespace
  -> Plural -- ^ "plural" -  the custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest ReplaceNamespacedCustomObjectScale contentType A.Value accept
replaceNamespacedCustomObjectScale _  _ body (Group group) (Version version) (Namespace namespace) (Plural plural) (Name name) =
  _mkRequest "PUT" ["/apis/",toPath group,"/",toPath version,"/namespaces/",toPath namespace,"/",toPath plural,"/",toPath name,"/scale"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data ReplaceNamespacedCustomObjectScale 
instance HasBodyParam ReplaceNamespacedCustomObjectScale Body 
    
-- | @*/*@
instance MimeType mtype => Consumes ReplaceNamespacedCustomObjectScale mtype

-- | @application/json@
instance Produces ReplaceNamespacedCustomObjectScale MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces ReplaceNamespacedCustomObjectScale MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces ReplaceNamespacedCustomObjectScale MimeYaml


-- *** replaceNamespacedCustomObjectStatus

-- | @PUT \/apis\/{group}\/{version}\/namespaces\/{namespace}\/{plural}\/{name}\/status@
-- 
-- replace status of the specified namespace scoped custom object
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
replaceNamespacedCustomObjectStatus 
  :: (Consumes ReplaceNamespacedCustomObjectStatus contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Body -- ^ "body"
  -> Group -- ^ "group" -  the custom resource's group
  -> Version -- ^ "version" -  the custom resource's version
  -> Namespace -- ^ "namespace" -  The custom resource's namespace
  -> Plural -- ^ "plural" -  the custom resource's plural name. For TPRs this would be lowercase plural kind.
  -> Name -- ^ "name" -  the custom object's name
  -> KubernetesRequest ReplaceNamespacedCustomObjectStatus contentType A.Value accept
replaceNamespacedCustomObjectStatus _  _ body (Group group) (Version version) (Namespace namespace) (Plural plural) (Name name) =
  _mkRequest "PUT" ["/apis/",toPath group,"/",toPath version,"/namespaces/",toPath namespace,"/",toPath plural,"/",toPath name,"/status"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data ReplaceNamespacedCustomObjectStatus 
instance HasBodyParam ReplaceNamespacedCustomObjectStatus Body 
    
-- | @*/*@
instance MimeType mtype => Consumes ReplaceNamespacedCustomObjectStatus mtype

-- | @application/json@
instance Produces ReplaceNamespacedCustomObjectStatus MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces ReplaceNamespacedCustomObjectStatus MimeVndKubernetesProtobuf
-- | @application/yaml@
instance Produces ReplaceNamespacedCustomObjectStatus MimeYaml

